# Criar conta no gitlab
# Criar projeto chamado bytebank
# Realizar clone com:

$ git remote add gitlab https://gitlab.com/jnlucas/meusistema.git
$ git remote add origin git@github.com:alura-cursos/devops.git

# Após criar projeto no gitlab, clonar o mesmo em repositório local
$ git clone 

# Baixar e descompactar para o diretório criado os arquivos do projeto em: https://github.com/alura-cursos/devops/archive/master.zip

# Adiciná-los ao projeto com:
$ git add --all
$ git push

# Configur o docker-compose.yaml

# Subir o container:
$ docker-compose up --build

Com esse comando vamos subir o container, e caso não tenhamos ainda a imagem aluracursos/django_todolist_image_build em nossa máquina, ela será baixada pelo docker.

Ao concluir o build, percebam que o terminal ficou preso a essa tarefa. Vamos então deixar que o mesmo rode em background, para isso digite no terminal:
$ ctrl c

# Em seguida vamos subir novamente o container:
$ docker-compose up -d

Passando o parâmetro -d para o comando, o container sobe mas não prende o terminal a esta tarefa.

Agora que o container está de pé, vamos rodar os migrations iniciais que o projeto precisa. Então, digite no terminal:

$ docker-compose run web python manage.py makemigrations
$ docker-compose run web python manage.py migrate

# E para criarmos um usuário para essa aplicação, ainda no terminal, digite:
$ docker-compose run web python manage.py createsuperuser

# É isso aí pessoal, agora temos o projeto funcionando em nosso container docker.

#################################################

# Configurar a estrutura do .gitlab-ci.yml

image: docker:stable

services:
- docker:dind

before_script:
- docker info

build-docker:
    stage: build
    script: 
    - docker build -t minha-imagem .

#################################################

# Criar conta no docker hub

# Criar variáveis de login no gitlab no menu settings > CICD > variables > add variable

# Salvar, comitar e push

#################################################

# Runner - executor de tarefas

# Após instalar o docker na máquina local, baixar a imagem do gitlab-runner
# No Power Shell
$ docker run gitlab/gitlab-runner:latest

#################################################

# No gitlab ir em settings > CICD > Runners > copiar chave em "especific runners"

# No Power Shell

# Acessar o container local e abrir o bash
# docker exec -it + id /bin/bash
$ docker exec -it 6b341e859fc7 /bin/bash

# Registrar 
$ gitlab-runner register

# Após esse comando, inserir as informações:

https://gitlab.com/
$ enter

# Colar o token que foi criado na página do gitlab
$ enter

# Inserir descrição do runner:
$ runner-bytebank

$ enter
# Ignorar a tag
$ enter

# Definir o executor, digitar "docker"
$ docker

# Definir imagem padrão para o runner
$ wesleyav/minha-imagem:latest

# Registrado com sucesso!

# Sair do temrinal do gitlab-runner
$ exit

# No gitlab atualizar a página do runners, será exibido o runner que foi criado
# Editar o runner e adicionar a tag "executor-tarefas" > salvar

#################################################